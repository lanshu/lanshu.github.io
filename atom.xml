<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pigpi</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pigpi.cn/"/>
  <updated>2017-10-25T03:03:56.400Z</updated>
  <id>http://pigpi.cn/</id>
  
  <author>
    <name>pigpi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo(6)--next小问题修改</title>
    <link href="http://pigpi.cn/2017/10/25/hexo(6)--next%E5%B0%8F%E9%97%AE%E9%A2%98%E4%BF%AE%E6%94%B9/"/>
    <id>http://pigpi.cn/2017/10/25/hexo(6)--next小问题修改/</id>
    <published>2017-10-25T06:15:08.000Z</published>
    <updated>2017-10-25T03:03:56.400Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-blockquote-文本内容超出不自动换行"><a href="#1-blockquote-文本内容超出不自动换行" class="headerlink" title="1. blockquote 文本内容超出不自动换行"></a>1. blockquote 文本内容超出不自动换行</h2><p>next主题中，用 blockquote  标签圈出文本时，出现以下情况:<img src="/2017/10/25/hexo(6)--next小问题修改/hexo(6" alt="">–next小问题修改/outline.png)</p><p>解决办法：</p><p>需要修改皮肤的样式，路径如下：/you_site_folder/themes/next/source/css_common/scaffolding/base.styl。</p><p>修改blockquote 样式下 添加  word-break: break-all;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">blockquote</span> &#123;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">word-break</span>: break-all;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>效果如下：<img src="/2017/10/25/hexo(6)--next小问题修改/hexo(6" alt="">–next小问题修改/outline_final.png)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-blockquote-文本内容超出不自动换行&quot;&gt;&lt;a href=&quot;#1-blockquote-文本内容超出不自动换行&quot; class=&quot;headerlink&quot; title=&quot;1. blockquote 文本内容超出不自动换行&quot;&gt;&lt;/a&gt;1. blockquote
      
    
    </summary>
    
      <category term="hexo建博" scheme="http://pigpi.cn/categories/hexo%E5%BB%BA%E5%8D%9A/"/>
    
    
      <category term="hexo" scheme="http://pigpi.cn/tags/hexo/"/>
    
      <category term="next" scheme="http://pigpi.cn/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>hexo(5)--next美化整理</title>
    <link href="http://pigpi.cn/2017/10/25/hexo(5)--next%E7%BE%8E%E5%8C%96%E6%95%B4%E7%90%86/"/>
    <id>http://pigpi.cn/2017/10/25/hexo(5)--next美化整理/</id>
    <published>2017-10-25T05:15:08.000Z</published>
    <updated>2017-10-25T03:04:35.196Z</updated>
    
    <content type="html"><![CDATA[<p>既然选择了next主题，也不打算经常换，但是做一些美化还是可以考虑的。</p><p>##1.在右上角或者左上角实现fork me on github</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;既然选择了next主题，也不打算经常换，但是做一些美化还是可以考虑的。&lt;/p&gt;
&lt;p&gt;##1.在右上角或者左上角实现fork me on github&lt;/p&gt;

      
    
    </summary>
    
      <category term="hexo建博" scheme="http://pigpi.cn/categories/hexo%E5%BB%BA%E5%8D%9A/"/>
    
    
      <category term="hexo" scheme="http://pigpi.cn/tags/hexo/"/>
    
      <category term="next" scheme="http://pigpi.cn/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>hexo(4)--hexo辅助插件和实用工具</title>
    <link href="http://pigpi.cn/2017/10/25/hexo(4)--hexo%E8%BE%85%E5%8A%A9%E6%8F%92%E4%BB%B6%E5%92%8C%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://pigpi.cn/2017/10/25/hexo(4)--hexo辅助插件和实用工具/</id>
    <published>2017-10-25T04:15:08.000Z</published>
    <updated>2017-10-25T03:04:39.170Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="hexo建博" scheme="http://pigpi.cn/categories/hexo%E5%BB%BA%E5%8D%9A/"/>
    
    
      <category term="hexo" scheme="http://pigpi.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo(3)--域名配置</title>
    <link href="http://pigpi.cn/2017/10/24/hexo(3)--%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/"/>
    <id>http://pigpi.cn/2017/10/24/hexo(3)--域名配置/</id>
    <published>2017-10-24T06:15:08.000Z</published>
    <updated>2017-10-25T02:25:45.550Z</updated>
    
    <content type="html"><![CDATA[<p>如果不喜欢github提供的域名，还可以绑定自己的域名。</p><p>当然首先你得有一个域名，移步<a href="https://wanwang.aliyun.com" target="_blank" rel="external">万网</a></p><p>域名解析我使用的是<a href="https://www.dnspod.cn/console/dashboard" target="_blank" rel="external">DNSPOD</a>，在你的域名购买商那里把域名的DNS服务器改成你使用的域名解析的地址。  </p><p>接着配置DNS解析，比如我的：  </p><p><img src="http://ojae95hts.bkt.clouddn.com/QQ%E5%9B%BE%E7%89%8720170105162803.png" alt=""></p><p>关于github的IP可以<a href="https://help.github.com/articles/troubleshooting-custom-domains/#dns-configuration-errors" target="_blank" rel="external">看这里</a>。  </p><p>然后在你的本地站点目录里的source目录下添加一个CNAME文件，不带后缀，以文本编辑器打开CNAME，里面添加你的域名信息（不加http前缀），比如我的：<a href="http://pigpi.cn">pigpi.cn</a>。提交部署，现在使用域名应该就可以访问你的博客了。  </p><h1 id="开始写一篇博客"><a href="#开始写一篇博客" class="headerlink" title="开始写一篇博客"></a>开始写一篇博客</h1><p>基本的搭建都好了，那么到底怎么写一篇博客呢？  </p><p>我也是新手，没有使用什么插件之类的，而是采用最简单的方法，并且我也不觉得多麻烦。  </p><ol><li>新建文章，hexo new “文章名称”，文章会生成在./source/_posts文件夹中  </li><li>采用可视化的markdown编辑器编写文章</li><li>生成并且部署  </li></ol><h2 id="关于可视化工具"><a href="#关于可视化工具" class="headerlink" title="关于可视化工具"></a>关于可视化工具</h2><p>我使用的是<a href="http://markdownpad.com/" target="_blank" rel="external">markdownpad</a>。  </p><blockquote><p>激活信息<br>邮箱地址：Soar360@live.com<br>密钥：  GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==  </p></blockquote><h2 id="关于图片图床"><a href="#关于图片图床" class="headerlink" title="关于图片图床"></a>关于图片图床</h2><p>我使用的是<a href="http://www.qiniu.com/?utm_campaign=baiduSEM&amp;utm_source=baiduSEM&amp;utm_medium=baiduSEM&amp;utm_content=baiduSEM" target="_blank" rel="external">七牛云</a>。  </p><h1 id="其他扩展功能"><a href="#其他扩展功能" class="headerlink" title="其他扩展功能"></a>其他扩展功能</h1><h2 id="关于搜索"><a href="#关于搜索" class="headerlink" title="关于搜索"></a>关于搜索</h2><p>由于我使用的皮肤已经集成了搜索，所以自己也没捣鼓了，具体自己可以搜一搜。</p><h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><p>评论插件我使用的是<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>，具体步骤如下：  </p><ol><li>先去多说<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>注册。  </li><li>把多说与皮肤进行关联， 一般的皮肤只需要在皮肤的_config.yml文件里配上多说的用户名。当然有的皮肤复杂点可能还需要配置下多说的通用代码，我并没有遇到，所以不深究。  </li></ol><h2 id="分享插件"><a href="#分享插件" class="headerlink" title="分享插件"></a>分享插件</h2><p>分享插件我使用的是<a href="http://share.baidu.com/code" target="_blank" rel="external">百度分享</a>，非常简单，只是需要选择自己喜欢的样子就可以了。 </p><h2 id="sitemap和RSS"><a href="#sitemap和RSS" class="headerlink" title="sitemap和RSS"></a>sitemap和RSS</h2><p>如果想要自己的博客被搜索引擎收录，需要安装sitemap插件：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-baidu-sitemap --save</div><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure><p><strong>网上大部分的教程这时候会让你在主目录的_config.yml文件配置下面的代码</strong>：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">plugins:</div><div class="line">  - hexo-generator-feed</div><div class="line">  - hexo-generator-sitemap</div><div class="line">  - hexo-generator-baidu-sitemap</div><div class="line">  </div><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xml</div><div class="line">  </div><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div></pre></td></tr></table></figure><p>经过我的测试，如果配置的话在生成时会一直报错，于是我去掉了，什么也不配置就行了，看来应该是hexo有内部的配置吧。  </p><p>在你的博客根目录的public下面发现生成了sitemap.xml、baidusitemap.xml以及auto.xml就表示成功了。但这只是完成了第一步，还需要去百度站长进行登记。  </p><h2 id="关于404页面"><a href="#关于404页面" class="headerlink" title="关于404页面"></a>关于404页面</h2><p>默认的404页面是github的，如果想自定义，需要把自己的404页面放在皮肤的source目录下即可。我采用的是腾讯公益的页面：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"your site url "</span> <span class="attr">homePageName</span>=<span class="string">"回到我的主页"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>暂时就这样吧，其他的以后再说。</p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果不喜欢github提供的域名，还可以绑定自己的域名。&lt;/p&gt;
&lt;p&gt;当然首先你得有一个域名，移步&lt;a href=&quot;https://wanwang.aliyun.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;万网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;域名解析我
      
    
    </summary>
    
      <category term="hexo建博" scheme="http://pigpi.cn/categories/hexo%E5%BB%BA%E5%8D%9A/"/>
    
    
      <category term="hexo" scheme="http://pigpi.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo(2)--主题的选择</title>
    <link href="http://pigpi.cn/2017/10/24/hexo(2)--%E4%B8%BB%E9%A2%98%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>http://pigpi.cn/2017/10/24/hexo(2)--主题的选择/</id>
    <published>2017-10-24T05:15:08.000Z</published>
    <updated>2017-10-25T03:04:45.197Z</updated>
    
    <content type="html"><![CDATA[<p>前篇已经简单的搭建了一个hexo博客，但是我希望能够有更好的视觉效果，这时候就涉及到主题的选择。</p><h3 id="主题网站"><a href="#主题网站" class="headerlink" title="主题网站"></a>主题网站</h3><p>给两个地址  </p><p><a href="https://hexo.io/themes/" target="_blank" rel="external"><strong>Hexo的官网主题专栏</strong></a> （总有一款适合你的）<br><a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external"><strong>知乎：有哪些好看的 Hexo 主题？</strong></a> </p><p>主题的质量参差不齐，尽量选择有良好的说明文档，持续更新的。主题的安装非常简单，找到地址，例如next主题：</p><pre><code>$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre><p>打开博客根目录的 _config.yml 设为 theme: you_theme_name。这样皮肤就设置好了，可以本地启动预览一下。  </p><p>至于主题本身的设置，优化美化，支持的插件集成等等，就需要查看主题的文档了。</p><p>###论选择一款好主题的重要性</p><p>主题的作用在我看来除了赏心悦目意外，更重要的就是维护省心、更新及时。个人博客的主旨在于分享自己，内容是第一位的，如果把有限的精力花在不断的应付主题的bug上，挺闹心。<br>例如以前用的最多的评论插件是duoshuo，去年duoshuo关停了，找替代方案网易云跟帖，又关停了。好的主题会及时提供替代方案或者开始就提供多种方案供我们选择，出现问题改下配置文件就可以。如果是差一点的，可能必须要换一款主题才行。</p><p>拿我使用过的两款来说：<a href="https://github.com/forsigner/fexo/" target="_blank" rel="external"><strong>fexo</strong></a>、<a href="http://theme-next.iissnan.com" target="_blank" rel="external"><strong>next</strong></a> ，点进去就能立判高下。虽然我超爱fexo的样子，但是也不得不妥协选择了人气最高的next主题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前篇已经简单的搭建了一个hexo博客，但是我希望能够有更好的视觉效果，这时候就涉及到主题的选择。&lt;/p&gt;
&lt;h3 id=&quot;主题网站&quot;&gt;&lt;a href=&quot;#主题网站&quot; class=&quot;headerlink&quot; title=&quot;主题网站&quot;&gt;&lt;/a&gt;主题网站&lt;/h3&gt;&lt;p&gt;给两个地址 
      
    
    </summary>
    
      <category term="hexo建博" scheme="http://pigpi.cn/categories/hexo%E5%BB%BA%E5%8D%9A/"/>
    
    
      <category term="hexo" scheme="http://pigpi.cn/tags/hexo/"/>
    
      <category term="next" scheme="http://pigpi.cn/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>某些技术选型</title>
    <link href="http://pigpi.cn/2017/10/20/%E6%9F%90%E4%BA%9B%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B/"/>
    <id>http://pigpi.cn/2017/10/20/某些技术选型/</id>
    <published>2017-10-20T06:15:08.000Z</published>
    <updated>2017-10-25T03:04:56.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><p>##DevOps</p><p>##自动化测试和部署</p><p>##搜索</p><p>##数据监控</p><p><img src="https://i.imgur.com/2GCYWgA.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;微服务&quot;&gt;&lt;a href=&quot;#微服务&quot; class=&quot;headerlink&quot; title=&quot;微服务&quot;&gt;&lt;/a&gt;微服务&lt;/h2&gt;&lt;p&gt;##DevOps&lt;/p&gt;
&lt;p&gt;##自动化测试和部署&lt;/p&gt;
&lt;p&gt;##搜索&lt;/p&gt;
&lt;p&gt;##数据监控&lt;/p&gt;
&lt;p&gt;&lt;img s
      
    
    </summary>
    
      <category term="技术栈" scheme="http://pigpi.cn/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="工具" scheme="http://pigpi.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="框架技术" scheme="http://pigpi.cn/tags/%E6%A1%86%E6%9E%B6%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>方向</title>
    <link href="http://pigpi.cn/2017/10/20/%E6%96%B9%E5%90%91/"/>
    <id>http://pigpi.cn/2017/10/20/方向/</id>
    <published>2017-10-20T06:15:08.000Z</published>
    <updated>2017-10-20T03:17:11.779Z</updated>
    
    <content type="html"><![CDATA[<p>#微服务</p><p>#DevOps</p><p>#自动化测试和部署</p><p>#搜索</p><p>#数据监控</p><p><img src="https://i.imgur.com/2GCYWgA.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#微服务&lt;/p&gt;
&lt;p&gt;#DevOps&lt;/p&gt;
&lt;p&gt;#自动化测试和部署&lt;/p&gt;
&lt;p&gt;#搜索&lt;/p&gt;
&lt;p&gt;#数据监控&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/2GCYWgA.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="技术" scheme="http://pigpi.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="博客相关" scheme="http://pigpi.cn/tags/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>hexo(1)--hexo + github-pages博客的简单搭建</title>
    <link href="http://pigpi.cn/2017/01/04/hexo(1)--hexo%20+%20github-pages%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/"/>
    <id>http://pigpi.cn/2017/01/04/hexo(1)--hexo + github-pages博客的简单搭建/</id>
    <published>2017-01-04T06:15:08.000Z</published>
    <updated>2017-10-25T02:46:17.720Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于github-pages"><a href="#关于github-pages" class="headerlink" title="关于github pages"></a>关于github pages</h1><p>Github Pages 是github提供的一种服务，可以用来搭建个人页面，GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。我们要搭建自己的博客使用的是第一种方式，这种方式每个用户名下面只能建立一个。  </p><p>使用github创建的博客是属于静态网站博客，都是以静态html形式展现，好处就是简单。</p><h1 id="关于hexo"><a href="#关于hexo" class="headerlink" title="关于hexo"></a>关于hexo</h1><blockquote><p>hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。  </p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li><p>风一般的速度  </p><p>Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。  </p></li><li><p>流畅的撰写  </p><p>支持GitHub Flavored Markdown和所有Octopress的插件。  </p></li><li><p>扩展性  </p><p>Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less。  </p></li></ul></blockquote><p>也有很多类似的框架，比如Jekyll、Ghost等等，我反正一点也不了解，不在我的知识范围呢，使用hexo原因也很简单，搜索出来hexo和jekyll二选一，我觉得hexo更简洁一些而已（至少名字要好记）。  </p><h1 id="关于markdown"><a href="#关于markdown" class="headerlink" title="关于markdown"></a>关于markdown</h1><blockquote><p>Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。</p></blockquote><p>虽然说是一种语言，其实学习成本很低，我在写这篇博客时也才是刚刚使用。使用hexo来写博客，需要使用markdown语言。 </p><p><a href="http://wowubuntu.com/markdown/#p" target="_blank" rel="external">Markdown 语法说明 (简体中文版) </a>  </p><h1 id="博客搭建步骤"><a href="#博客搭建步骤" class="headerlink" title="博客搭建步骤"></a>博客搭建步骤</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>你必须有一个github账号。<a href="https://github.com/" target="_blank" rel="external">点此直达</a></li><li>你必须在电脑上安装了git工具，用于文章的上传。<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点此下载</a></li><li>安装node.js，hexo是基于这个的，用于生成静态页面。<a href="https://nodejs.org/en/" target="_blank" rel="external">点此下载</a>  </li></ol><h2 id="创建Github-Pages项目"><a href="#创建Github-Pages项目" class="headerlink" title="创建Github Pages项目"></a>创建Github Pages项目</h2><p>借用别人的一张图：  </p><p><img src="http://ojae95hts.bkt.clouddn.com/17-1-5/52030435-file_1483603014029_720.png" alt="">  </p><p>然后需要配置SSH密钥，可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。这个我就不赘述了，可以参考下<a href="http://www.jianshu.com/p/15ae47eddc56" target="_blank" rel="external">这篇文章</a>的第三节。</p><h2 id="hexo的安装和配置"><a href="#hexo的安装和配置" class="headerlink" title="hexo的安装和配置"></a>hexo的安装和配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>找一个你喜欢的地方建个文件夹，进文件夹使用Git Bash敲命令</p><pre><code>npm install -g hexo-cli  </code></pre><p>此外有很多插件可以选择：  </p><pre><code>npm install hexo-generator-index --save  npm install hexo-generator-archive --save  npm install hexo-generator-category --save  npm install hexo-generator-tag --save  npm install hexo-server --save  npm install hexo-deployer-git --save  npm install hexo-deployer-heroku --save  npm install hexo-deployer-rsync --save  npm install hexo-deployer-openshift --save  npm install hexo-renderer-marked@0.2 --save  npm install hexo-renderer-stylus@0.2 --save  npm install hexo-generator-feed@1 --save  npm install hexo-generator-sitemap@1 --save</code></pre><p>反正我是不知道有什么用，直接全装上了。安装插件的时候也许会报错，试试看更新下npm的版本：   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i npm -g</div></pre></td></tr></table></figure><p>然后需要做初始化：  </p><pre><code>hexo init</code></pre><p>这样文件夹内就生成了博客的目录，如下：  </p><p><img src="http://ojae95hts.bkt.clouddn.com/17-1-5/11101925-file_1483596354994_142c7.png" alt="aa">  </p><p>deploy：执行hexo deploy命令部署到GitHub上的内容目录<br>public：执行hexo generate命令，输出的静态网页内容目录<br>scaffolds：layout模板文件目录，其中的md文件可以添加编辑<br>scripts：扩展脚本目录，这里可以自定义一些javascript脚本<br>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。<br>_drafts：草稿文章<br>_posts：发布文章<br>themes：主题文件目录<br>_config.yml：全局配置文件，大多数的设置都在这里<br>package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</p><p>至此hexo也就安装好了，可以试着预览下，需要通过命令：  </p><pre><code>hexo g   hexo s</code></pre><p>前者是生成静态页面，后者是启动服务，启动后通过<a href="http://localhost:4000/能够预览你的博客。" target="_blank" rel="external">http://localhost:4000/能够预览你的博客。</a>  </p><p><img src="http://ojae95hts.bkt.clouddn.com/17-1-5/36871701-file_1483595890915_1424.png?imageView/2/w/619/q/90" alt="">  </p><h3 id="hexo的常用命令和配置"><a href="#hexo的常用命令和配置" class="headerlink" title="hexo的常用命令和配置"></a>hexo的常用命令和配置</h3><p>关于你博客的设置可以分成2部分：  </p><ol><li>全局设置：在你博客目录下有一个文件名_config.yml，打开可以配置信息。  </li><li>局部设置：在你博客目录下 \themes\你使用的主题_config.yml，经常修改的应该是这个文件，因为直接关乎到博客的样子  </li></ol><p>常用命令都很简单：   </p><pre><code>Hexo常用命令：hexo new &quot;postName&quot;       #新建文章hexo new page &quot;pageName&quot;  #新建页面hexo generate             #生成静态页面至public目录hexo server               #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy               #将.deploy目录部署到GitHub  hexo clean                #有任何问题都可以使用clean试试</code></pre><p>当然，如果每次输入那么长命令，那么一定想到用简写：  </p><pre><code>hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy</code></pre><p>复合命令：  </p><pre><code>hexo d -ghexo s -g</code></pre><p>其他命令：  </p><pre><code>npm update -g hexo           #更新hexo</code></pre><h3 id="和Github-pages项目进行关联"><a href="#和Github-pages项目进行关联" class="headerlink" title="和Github pages项目进行关联"></a>和Github pages项目进行关联</h3><p>复制你的github pages项目的地址，例如我的是：<strong><a href="https://github.com/lanshu/lanshu.github.io.git" target="_blank" rel="external">https://github.com/lanshu/lanshu.github.io.git</a></strong>。  </p><p>打开你的hexo文件夹的配置文件_config.yml，找到deploy节点，按照如下配置：  </p><p><img src="http://ojae95hts.bkt.clouddn.com/17-1-5/7933302-file_1483603567187_17b95.png" alt="">  </p><h1 id="开始写一篇博客"><a href="#开始写一篇博客" class="headerlink" title="开始写一篇博客"></a>开始写一篇博客</h1><p>基本的搭建都好了，那么到底怎么写一篇博客呢？  </p><p>我也是新手，没有使用什么插件之类的，而是采用最简单的方法，并且我也不觉得多麻烦。  </p><ol><li>新建文章，hexo new “文章名称”，文章会生成在./source/_posts文件夹中  </li><li>采用可视化的markdown编辑器编写文章</li><li>生成并且部署  hexo d -g</li></ol><h2 id="关于可视化工具"><a href="#关于可视化工具" class="headerlink" title="关于可视化工具"></a>关于可视化工具</h2><p>我使用的是<a href="http://markdownpad.com/" target="_blank" rel="external">markdownpad</a>。  </p><blockquote><p>激活信息<br>邮箱地址：Soar360@live.com<br>密钥：  GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==  </p></blockquote><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于github-pages&quot;&gt;&lt;a href=&quot;#关于github-pages&quot; class=&quot;headerlink&quot; title=&quot;关于github pages&quot;&gt;&lt;/a&gt;关于github pages&lt;/h1&gt;&lt;p&gt;Github Pages 是github提供
      
    
    </summary>
    
      <category term="技术" scheme="http://pigpi.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="博客相关" scheme="http://pigpi.cn/tags/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>如何简单搭建一个github pages + hexo博客</title>
    <link href="http://pigpi.cn/2017/01/04/%E5%A6%82%E4%BD%95%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAgithub-pages%E5%8D%9A%E5%AE%A2/"/>
    <id>http://pigpi.cn/2017/01/04/如何简单搭建一个github-pages博客/</id>
    <published>2017-01-04T06:15:08.000Z</published>
    <updated>2017-01-12T04:07:00.041Z</updated>
    
    <content type="html"><![CDATA[<p>想了一下，还是把搭建一个github pages博客作为第一篇文章，虽然没什么太大技术含量，但是比较琐碎，整理一下也好。  </p><h1 id="关于github-pages"><a href="#关于github-pages" class="headerlink" title="关于github pages"></a>关于github pages</h1><p>Github Pages 是github提供的一种服务，可以用来搭建个人页面，GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。我们要搭建自己的博客使用的是第一种方式，这种方式每个用户名下面只能建立一个。  </p><p>使用github创建的博客是属于静态网站博客，都是以静态html形式展现，好处就是简单。</p><h1 id="关于hexo"><a href="#关于hexo" class="headerlink" title="关于hexo"></a>关于hexo</h1><blockquote><p>hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。  </p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>风一般的速度<br>Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。  </li><li>流畅的撰写<br>支持GitHub Flavored Markdown和所有Octopress的插件。  </li><li>扩展性<br>Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less。  </li></ul></blockquote><p>也有很多类似的框架，比如Jekyll、Ghost等等，我反正一点也不了解，不在我的知识范围呢，使用hexo原因也很简单，搜索出来hexo和jekyll二选一，我觉得hexo更简洁一些而已（至少名字要好记）。  </p><h1 id="关于markdown"><a href="#关于markdown" class="headerlink" title="关于markdown"></a>关于markdown</h1><blockquote><p>Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。</p></blockquote><p>虽然说是一种语言，其实学习成本很低，我在写这篇博客时也才是刚刚使用。使用hexo来写博客，需要使用markdown语言。 </p><p><a href="http://wowubuntu.com/markdown/#p" target="_blank" rel="external">Markdown 语法说明 (简体中文版) </a>  </p><h1 id="博客搭建步骤"><a href="#博客搭建步骤" class="headerlink" title="博客搭建步骤"></a>博客搭建步骤</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>你必须有一个github账号。<a href="https://github.com/" target="_blank" rel="external">点此直达</a></li><li>你必须在电脑上安装了git工具，用于文章的上传。<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点此下载</a></li><li>安装node.js，hexo是基于这个的，用于生成静态页面。<a href="https://nodejs.org/en/" target="_blank" rel="external">点此下载</a>  </li></ol><h2 id="创建Github-Pages项目"><a href="#创建Github-Pages项目" class="headerlink" title="创建Github Pages项目"></a>创建Github Pages项目</h2><p>借用别人的一张图：  </p><p><img src="http://ojae95hts.bkt.clouddn.com/17-1-5/52030435-file_1483603014029_720.png" alt="">  </p><p>然后需要配置SSH密钥，可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。这个我就不赘述了，可以参考下<a href="http://www.jianshu.com/p/15ae47eddc56" target="_blank" rel="external">这篇文章</a>的第三节。</p><h2 id="hexo的安装和配置"><a href="#hexo的安装和配置" class="headerlink" title="hexo的安装和配置"></a>hexo的安装和配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>找一个你喜欢的地方建个文件夹，进文件夹使用Git Bash敲命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure><p>此外有很多插件可以选择：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save  </div><div class="line">npm install hexo-generator-archive --save  </div><div class="line">npm install hexo-generator-category --save  </div><div class="line">npm install hexo-generator-tag --save  </div><div class="line">npm install hexo-server --save  </div><div class="line">npm install hexo-deployer-git --save  </div><div class="line">npm install hexo-deployer-heroku --save  </div><div class="line">npm install hexo-deployer-rsync --save  </div><div class="line">npm install hexo-deployer-openshift --save  </div><div class="line">npm install hexo-renderer-marked@0.2 --save  </div><div class="line">npm install hexo-renderer-stylus@0.2 --save  </div><div class="line">npm install hexo-generator-feed@1 --save  </div><div class="line">npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure><p>反正我是不知道有什么用，直接全装上了。安装插件的时候也许会报错，试试看更新下npm的版本：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm i npm -g</div><div class="line">``` </div><div class="line"></div><div class="line">然后需要做初始化：</div></pre></td></tr></table></figure><p>hexo init<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">这样文件夹内就生成了博客的目录，如下：  </div><div class="line">  </div><div class="line">![](http://ojae95hts.bkt.clouddn.com/17-1-5/11101925-file_1483596354994_142c7.png)  </div><div class="line">&gt; </div><div class="line">-     .deploy：执行hexo deploy命令部署到GitHub上的内容目录  </div><div class="line">-     public：执行hexo generate命令，输出的静态网页内容目录</div><div class="line">-     scaffolds：layout模板文件目录，其中的md文件可以添加编辑</div><div class="line">-     scripts：扩展脚本目录，这里可以自定义一些javascript脚本</div><div class="line">-     source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。</div><div class="line">-     _drafts：草稿文章</div><div class="line">-     _posts：发布文章</div><div class="line">-     themes：主题文件目录</div><div class="line">-     _config.yml：全局配置文件，大多数的设置都在这里</div><div class="line">-     package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</div><div class="line">   </div><div class="line">至此hexo也就安装好了，可以试着预览下，需要通过命令：</div></pre></td></tr></table></figure></p><p>hexo g<br>hexo s<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">前者是生成静态页面，后者是启动服务，启动后通过http://localhost:4000/能够预览你的博客。  </div><div class="line"></div><div class="line">![](http://ojae95hts.bkt.clouddn.com/17-1-5/36871701-file_1483595890915_1424.png?imageView/2/w/619/q/90)  </div><div class="line"></div><div class="line">### hexo的常用命令和配置  </div><div class="line">  </div><div class="line">关于你博客的设置可以分成2部分：  </div><div class="line">  </div><div class="line">1. 全局设置：在你博客目录下有一个文件名_config.yml，打开可以配置信息。  </div><div class="line">2. 局部设置：在你博客目录下 \themes\你使用的主题\_config.yml，经常修改的应该是这个文件，因为直接关乎到博客的样子  </div><div class="line"> </div><div class="line">常用命令都很简单：   </div><div class="line"></div><div class="line">```    </div><div class="line">Hexo常用命令：</div><div class="line">hexo new &quot;postName&quot;       #新建文章</div><div class="line">hexo new page &quot;pageName&quot;  #新建页面</div><div class="line">hexo generate             #生成静态页面至public目录</div><div class="line">hexo server               #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">hexo deploy               #将.deploy目录部署到GitHub  </div><div class="line">hexo clean                #有任何问题都可以使用clean试试</div></pre></td></tr></table></figure></p><p>当然，如果每次输入那么长命令，那么一定想到用简写：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n == hexo new</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure><p>复合命令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo d -g</div><div class="line">hexo s -g</div></pre></td></tr></table></figure><p>其他命令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm update -g hexo   #更新hexo</div></pre></td></tr></table></figure><h3 id="和Github-pages项目进行关联"><a href="#和Github-pages项目进行关联" class="headerlink" title="和Github pages项目进行关联"></a>和Github pages项目进行关联</h3><p>复制你的github pages项目的地址，例如我的是：<strong><a href="https://github.com/lanshu/lanshu.github.io.git" target="_blank" rel="external">https://github.com/lanshu/lanshu.github.io.git</a></strong>。  </p><p>打开你的hexo文件夹的配置文件_config.yml，找到deploy节点，按照如下配置：  </p><p><img src="http://ojae95hts.bkt.clouddn.com/17-1-5/7933302-file_1483603567187_17b95.png" alt="">  </p><h3 id="好看的皮肤"><a href="#好看的皮肤" class="headerlink" title="好看的皮肤"></a>好看的皮肤</h3><p>你现在肯定想的是，这和我看到的那些漂亮的博客完全没关系啊，不要着急，接下来我们可以选择自己喜欢的皮肤来安装。  </p><p>关于皮肤，可以去<a href="https://hexo.io/themes/" target="_blank" rel="external"><strong>Hexo的官网主题专栏</strong></a> 去找，这里基本是主流的皮肤，其他的需要自己去找了，github上就有很多。  </p><p>找到自己喜欢的皮肤后，复制他的地址，比如我用的皮肤是fexo，地址<a href="https://github.com/lanshu/fexo，" target="_blank" rel="external">https://github.com/lanshu/fexo，</a>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git@github.com:forsigner/fexo.git themes/fexo</div></pre></td></tr></table></figure><p>打开博客根目录的 _config.yml 设为 theme: fexo（你自己的皮肤名称）。这样皮肤就设置好了，可以本地启动预览一下。  </p><p>一般这样的项目首页上都会有文档，教你如何去安装和配置，包括博客里的各种样式、文字、插件等等，也都很简单。有能力的自己也可以开发一套，我是没这方面的能力。  </p><h2 id="关于域名配置"><a href="#关于域名配置" class="headerlink" title="关于域名配置"></a>关于域名配置</h2><p>基本的博客都搭建好了，如果不喜欢github提供的域名，还可以绑定自己的域名，首先你得有一个域名。 </p><p>域名解析我使用的是<a href="https://www.dnspod.cn/console/dashboard" target="_blank" rel="external">DNSPOD</a>，在你的域名购买商那里把域名的DNS服务器改成你使用的域名解析的地址。  </p><p>接着配置DNS解析，比如我的：  </p><p><img src="http://ojae95hts.bkt.clouddn.com/QQ%E5%9B%BE%E7%89%8720170105162803.png" alt=""></p><p>关于github的IP可以<a href="https://help.github.com/articles/troubleshooting-custom-domains/#dns-configuration-errors" target="_blank" rel="external">看这里</a>。  </p><p>然后在你的本地站点目录里的source目录下添加一个CNAME文件，不带后缀，以文本编辑器打开CNAME，里面添加你的域名信息（不加<a href="http://）。提交部署，现在使用域名应该就可以访问你的博客了。" target="_blank" rel="external">http://）。提交部署，现在使用域名应该就可以访问你的博客了。</a>  </p><h1 id="开始写一篇博客"><a href="#开始写一篇博客" class="headerlink" title="开始写一篇博客"></a>开始写一篇博客</h1><p>基本的搭建都好了，那么到底怎么写一篇博客呢？  </p><p>我也是新手，没有使用什么插件之类的，而是采用最简单的方法，并且我也不觉得多麻烦。  </p><ol><li>新建文章，hexo new “文章名称”，文章会生成在./source/_posts文件夹中  </li><li>采用可视化的markdown编辑器编写文章</li><li>生成并且部署  </li></ol><h2 id="关于可视化工具"><a href="#关于可视化工具" class="headerlink" title="关于可视化工具"></a>关于可视化工具</h2><p>我使用的是<a href="http://markdownpad.com/" target="_blank" rel="external">markdownpad</a>。  </p><blockquote><p>激活信息<br>邮箱地址：Soar360@live.com<br>密钥：  GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==  </p></blockquote><h2 id="关于图片图床"><a href="#关于图片图床" class="headerlink" title="关于图片图床"></a>关于图片图床</h2><p>我使用的是<a href="http://www.qiniu.com/?utm_campaign=baiduSEM&amp;utm_source=baiduSEM&amp;utm_medium=baiduSEM&amp;utm_content=baiduSEM" target="_blank" rel="external">七牛云</a>。  </p><h1 id="其他扩展功能"><a href="#其他扩展功能" class="headerlink" title="其他扩展功能"></a>其他扩展功能</h1><h2 id="关于搜索"><a href="#关于搜索" class="headerlink" title="关于搜索"></a>关于搜索</h2><p>由于我使用的皮肤已经集成了搜索，所以自己也没捣鼓了，具体自己可以搜一搜。</p><h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><p>评论插件我使用的是<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>，具体步骤如下：  </p><ol><li>先去多说<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>注册。  </li><li>把多说与皮肤进行关联， 一般的皮肤只需要在皮肤的_config.yml文件里配上多说的用户名。当然有的皮肤复杂点可能还需要配置下多说的通用代码，我并没有遇到，所以不深究。  </li></ol><h2 id="分享插件"><a href="#分享插件" class="headerlink" title="分享插件"></a>分享插件</h2><p>分享插件我使用的是<a href="http://share.baidu.com/code" target="_blank" rel="external">百度分享</a>，非常简单，只是需要选择自己喜欢的样子就可以了。 </p><h2 id="sitemap和RSS"><a href="#sitemap和RSS" class="headerlink" title="sitemap和RSS"></a>sitemap和RSS</h2><p>如果想要自己的博客被搜索引擎收录，需要安装sitemap插件：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-baidu-sitemap --save</div><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure><p><strong>网上大部分的教程这时候会让你在主目录的_config.yml文件配置下面的代码</strong>：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">plugins:</div><div class="line">  - hexo-generator-feed</div><div class="line">  - hexo-generator-sitemap</div><div class="line">  - hexo-generator-baidu-sitemap</div><div class="line">  </div><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xml</div><div class="line">  </div><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div></pre></td></tr></table></figure><p>经过我的测试，如果配置的话在生成时会一直报错，于是我去掉了，什么也不配置就行了，看来应该是hexo有内部的配置吧。  </p><p>在你的博客根目录的public下面发现生成了sitemap.xml、baidusitemap.xml以及auto.xml就表示成功了。但这只是完成了第一步，还需要去百度站长进行登记。  </p><h2 id="关于404页面"><a href="#关于404页面" class="headerlink" title="关于404页面"></a>关于404页面</h2><p>默认的404页面是github的，如果想自定义，需要把自己的404页面放在皮肤的source目录下即可。我采用的是腾讯公益的页面：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"your site url "</span> <span class="attr">homePageName</span>=<span class="string">"回到我的主页"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>暂时就这样吧，其他的以后再说。</p><script>window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":["weixin","tsina","qzone","tqq","sqq","copy"],"bdPic":"","bdStyle":"0","bdSize":"24"},"slide":{"type":"slide","bdImg":"5","bdPos":"right","bdTop":"250"}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想了一下，还是把搭建一个github pages博客作为第一篇文章，虽然没什么太大技术含量，但是比较琐碎，整理一下也好。  &lt;/p&gt;
&lt;h1 id=&quot;关于github-pages&quot;&gt;&lt;a href=&quot;#关于github-pages&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
      <category term="技术" scheme="http://pigpi.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="博客相关" scheme="http://pigpi.cn/tags/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>开篇</title>
    <link href="http://pigpi.cn/2017/01/04/%E5%BC%80%E7%AF%87/"/>
    <id>http://pigpi.cn/2017/01/04/开篇/</id>
    <published>2017-01-04T03:49:44.000Z</published>
    <updated>2017-10-25T02:30:07.637Z</updated>
    
    <content type="html"><![CDATA[<p>首先欢迎来到我的博客 <strong><a href="http://pigpi.cn">猪皮</a></strong>。</p><p>本身自己是搞技术的，也尝试过写一些博客记录自己，但是总是没有坚持下来。总是说的太多，做的太少。不想给自己找原因，只想找个目标。</p><p>建立自己的博客，一直是想做的事情，遇到github pages于是水到渠成，简单轻便，不需要多重的环境，最多要有个域名。不关心到底有多少人看，只是想坚持下去，希望这是我写的最后一篇博客开篇。想写的东西很多：技术、生活、心情。。。看过很多东西，也对很多东西感兴趣过，可是自小对好记性不如烂笔头嗤之以鼻。其实现在是后悔的，一点一滴如果都记录下来，那么我肯定要比现在强很多。但是现在也不晚，所以少说话，多记录，文字的魅力需要时间来发酵。心里唯有两个字——<strong>坚持</strong>！</p><p>为什么博客名字叫猪皮呢？本身我姓朱，然后儿子刚刚3岁，喜欢叫自己老皮！恰好pigpi的域名也在，于是毫不犹豫的这么叫了。</p><p>好了，就这些了，欢迎常来！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先欢迎来到我的博客 &lt;strong&gt;&lt;a href=&quot;http://pigpi.cn&quot;&gt;猪皮&lt;/a&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;本身自己是搞技术的，也尝试过写一些博客记录自己，但是总是没有坚持下来。总是说的太多，做的太少。不想给自己找原因，只想找个目标。&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活" scheme="http://pigpi.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随想" scheme="http://pigpi.cn/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
</feed>
