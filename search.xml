<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[spring-cloud开篇]]></title>
      <url>/2017/11/24/spring-cloud%E5%BC%80%E7%AF%87/</url>
      <content type="html"><![CDATA[<p>微服务的概念现在特别火热，以前研究过SOA，但是实际使用中还是出了不少问题，服务粒度过大，业务越来越多的时候会很混乱。当然这个和缺乏经验有关，毕竟实践机会比较少，项目规模没那么大，我一直坚信技术架构的演变是由业务规模推进的。虽然高射炮打蚊子真的是浪费，但是作为技术屌丝，还是要偷偷摸摸的学习下怎么造高射炮，真到哪天蚊子那么大了，我也能随时掏出来。  </p>
<p>微服务在我看来真的是大势所趋，所以我来开始自己折腾折腾。我自己大致整理了一下和微服务相关的技术栈，如下图：  </p>
<p><img src="/2017/11/24/spring-cloud开篇/1.jpeg" alt="">  </p>
<p>主要基于spring cloud，涉及的技术、框架、知识面都很多，并且目前并没有一种成熟的解决方案，所以更像一盒乐高，需要自己去装配，我对于这种东西比较感兴趣哈。如果针对这张图的话，自己欠缺的还很多，只好慢慢来了。目前技术栈只是初始版本，后续学习过程中有新增的、调整的，我也会及时更新，这个就当是总纲吧。</p>
]]></content>
      
        <categories>
            
            <category> spring cloud </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring cloud </tag>
            
            <tag> 微服务 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo7--next小问题修改]]></title>
      <url>/2017/10/25/hexo7--next%E5%B0%8F%E9%97%AE%E9%A2%98%E4%BF%AE%E6%94%B9/</url>
      <content type="html"><![CDATA[<h1 id="blockquote-文本内容超出不自动换行"><a href="#blockquote-文本内容超出不自动换行" class="headerlink" title="blockquote 文本内容超出不自动换行"></a>blockquote 文本内容超出不自动换行</h1><p>next主题中，用 blockquote  标签圈出文本时，出现以下情况:<img src="/2017/10/25/hexo7--next小问题修改/outline.png" alt=""></p>
<p>解决办法：</p>
<p>需要修改皮肤的样式，路径如下：/you_site_folder/themes/next/source/css_common/scaffolding/base.styl。</p>
<a id="more"></a>
<p>修改blockquote 样式下 添加  word-break: break-all;</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">blockquote</span> &#123;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">word-break</span>: break-all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果如下：<img src="/2017/10/25/hexo7--next小问题修改/outline_final.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> hexo建博 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo6--next美化整理]]></title>
      <url>/2017/10/25/hexo6--next%E7%BE%8E%E5%8C%96%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<p>既然选择了next主题，也不打算经常换，但是做一些美化还是可以考虑的。 </p>
<h1 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/2017/10/25/hexo6--next美化整理/1.png" alt=""></p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">这里</a>挑选自己喜欢的样式，并复制代码。 然后粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>改为你的github地址。</p>
<p><img src="/2017/10/25/hexo6--next美化整理/2.png" alt=""></p>
<p>重新clean并生成。　</p>
<a id="more"></a>
<h1 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h1><p>默认的404页面是github的，如果想自定义，需要把自己的404.html页面放在皮肤的source目录下即可。建议使用腾讯公益的页面：  </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"your site url "</span> <span class="attr">homePageName</span>=<span class="string">"回到我的主页"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h1><h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h2><p><img src="/2017/10/25/hexo6--next美化整理/3.png" alt=""> </p>
<p>线条会动啊动，飘啊飘。</p>
<h2 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h2><h3 id="添加js"><a href="#添加js" class="headerlink" title="添加js"></a>添加js</h3><p>修改 <code>themes/next/layout/_layout.swig</code> </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</div><div class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div><div class="line"><span class="regexp">&#123;% endif %&#125;</span></div></pre></td></tr></table></figure>
<p>将上述代码防止在<code>&lt; /body&gt;</code> 前就可以了(注意不要放在<code>&lt; /head&gt;</code>的后面)。</p>
<h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改_config.yml</h3><p>打开皮肤目录下的<code>_config.yml</code> 配置文件，添加如下代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># background settings</div><div class="line"># add canvas-nest effect</div><div class="line"># see detail from https://github.com/hustcc/canvas-nest.js</div><div class="line">canvas_nest: true</div></pre></td></tr></table></figure>
<h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>动态背景的某些属性可以自定义，</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</div><div class="line">&lt;script type=<span class="string">"text/javascript"</span></div><div class="line">color=<span class="string">"0,0,255"</span> opacity=<span class="string">'0.7'</span> zIndex=<span class="string">"-2"</span> count=<span class="string">"99"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li>
<li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li>
<li><code>count</code>: 线条的总数量, 默认: <code>150</code></li>
<li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code> </li>
</ul>
<p>重新clean并生成。</p>
<h1 id="网站底部字数统计-amp-文章字数统计功能"><a href="#网站底部字数统计-amp-文章字数统计功能" class="headerlink" title="网站底部字数统计&amp;文章字数统计功能"></a>网站底部字数统计&amp;文章字数统计功能</h1><h2 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h2><p><img src="/2017/10/25/hexo6--next美化整理/4.png" alt=""> </p>
<p><img src="/2017/10/25/hexo6--next美化整理/5.png" alt=""> </p>
<h2 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h2><p>安装插件：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm install hexo-wordcount --save</div></pre></td></tr></table></figure>
<p>修改主题配置文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Post wordcount display settings</div><div class="line"># Dependencies: https://github.com/willin/hexo-wordcount</div><div class="line">post_wordcount:</div><div class="line">  item_text: true</div><div class="line">  wordcount: true</div><div class="line">  min2read: true</div><div class="line">  totalcount: true</div><div class="line">  separated_meta: true</div></pre></td></tr></table></figure>
<h1 id="网站的图标Favicon"><a href="#网站的图标Favicon" class="headerlink" title="网站的图标Favicon"></a>网站的图标Favicon</h1><p>把图标文件<code>favicon.ico</code> 放在<code>/themes/next/source/images</code>里，并且修改主题配置文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Put your favicon.ico into `hexo-site/source/` directory.</div><div class="line">favicon: /favicon.ico</div></pre></td></tr></table></figure>
<h1 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h1><h2 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h2><p><img src="/2017/10/25/hexo6--next美化整理/6.png" alt=""></p>
<h2 id="实现-3"><a href="#实现-3" class="headerlink" title="实现"></a>实现</h2><p>在目录 <code>/themes/next/layout/_macro/下</code>添加 <code>my-copyright.swig</code>文件：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&#123;% if page.copyright %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">title</span>=<span class="string">"访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"&#123;&#123; page.permalink &#125;&#125;"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"> </span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span></div><div class="line"><span class="javascript">    clipboard.on(<span class="string">'success'</span>, $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">      $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="undefined">        swal(&#123;   </span></div><div class="line"><span class="javascript">          title: <span class="string">""</span>,   </span></div><div class="line"><span class="javascript">          text: <span class="string">'复制成功'</span>,   </span></div><div class="line"><span class="javascript">          html: <span class="literal">false</span>,</span></div><div class="line"><span class="undefined">          timer: 500,   </span></div><div class="line"><span class="javascript">          showConfirmButton: <span class="literal">false</span></span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="undefined">      &#125;);</span></div><div class="line"><span class="undefined">    &#125;));  </span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>在目录<code>/themes/next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>文件：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.my_post_copyright</span> &#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">85%</span>;</div><div class="line">  <span class="attribute">max-width</span>: <span class="number">45em</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</div><div class="line">  <span class="attribute">word-break</span>: break-all;</div><div class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.4);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">  <span class="attribute">width</span>: <span class="number">5.2em</span>;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#b5b5b5</span>;</div><div class="line">  <span class="attribute">font-weight</span>: bold;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</div><div class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">5em</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</div><div class="line">  <span class="attribute">border-bottom</span>:<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#a3d2a3</span>;</div><div class="line">  <span class="attribute">text-decoration</span>: underline;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">font-weight</span>: normal;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</div><div class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</div><div class="line">  +mobile()&#123;display:none;&#125;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</div><div class="line">  <span class="attribute">cursor</span>: pointer;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>修改<code>/themes/next/layout/_macro/post.swig</code>文件，在代码</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">  	&#123;% include 'wechat-subscriber.swig' %&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>之前添加增加如下代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;% if not is_index %&#125;</div><div class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">        &#123;% include 'my-copyright.swig' %&#125;</div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>修改<code>/themes/next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@import &quot;my-post-copyright&quot;</div></pre></td></tr></table></figure>
<p>保存重新生成即可。 </p>
<h1 id="隐藏网页底部hexo和主题信息"><a href="#隐藏网页底部hexo和主题信息" class="headerlink" title="隐藏网页底部hexo和主题信息"></a>隐藏网页底部hexo和主题信息</h1><p><img src="/2017/10/25/hexo6--next美化整理/7.png" alt=""> </p>
<p>打开<code>/themes/next/layout/_partials/footer.swig</code>，注释掉下述代码：</p>
<p><img src="/2017/10/25/hexo6--next美化整理/8.png" alt=""> </p>
]]></content>
      
        <categories>
            
            <category> hexo建博 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo5--hexo辅助插件和第三方服务]]></title>
      <url>/2017/10/25/hexo5--hexo%E8%BE%85%E5%8A%A9%E6%8F%92%E4%BB%B6%E5%92%8C%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<h1 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h1><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/2017/10/25/hexo5--hexo辅助插件和第三方服务/1.png" alt=""> </p>
<h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><p>首先安装插件：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm install --save hexo-generator-feed</div></pre></td></tr></table></figure>
<p>打开博客根目录下的<code>_config.yml</code> 配置文件，末尾添加如下代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: http://hexo.io/plugins/</div><div class="line">plugins: hexo-generate-feed</div></pre></td></tr></table></figure>
<p>打开皮肤目录下的<code>_config.yml</code> 配置文件，修改rss的属性值：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Set rss to false to disable feed link.</div><div class="line"># Leave rss as empty to use site's feed link.</div><div class="line"># Set rss to specific value if you have burned your feed already.</div><div class="line">rss: /atom.xml</div></pre></td></tr></table></figure>
<p>重新生成博客。 </p>
<a id="more"></a>
<h1 id="评论插件-gitalk"><a href="#评论插件-gitalk" class="headerlink" title="评论插件-gitalk"></a>评论插件-gitalk</h1><p>到目前为止，好用的评论插件基本都停止服务了，剩下的畅言需要备案，其他也不怎么好用，所以我直接选择了gitalk，必须拥有github账号才可以评论，范围是小了点，先用着再说吧，效果如图：</p>
<p><img src="/2017/10/25/hexo5--hexo辅助插件和第三方服务/2.png" alt=""></p>
<p>安装步骤如下：下面引用<a href="https://github.com/settings/applications/new" target="_blank" rel="external">这篇文章</a>， 谢谢作者的分享。</p>
<h2 id="新建Gitalk的swig文件"><a href="#新建Gitalk的swig文件" class="headerlink" title="新建Gitalk的swig文件"></a>新建Gitalk的swig文件</h2><p>由于Next主题的可扩展性还算好，为了方便统一管理，尽量不修改已经存在的文件。<br>首先创建Gitalk的swig文件，放在<code>next/layout/_third-party/comments</code>文件夹下，命名为gitalk.swig。内容如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;</div><div class="line"></div><div class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt;</div><div class="line">  </div><div class="line">  &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt;</div><div class="line"></div><div class="line">   &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">		var gitalk = new Gitalk(&#123;</div><div class="line">		  clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;,</div><div class="line">		  clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;,</div><div class="line">		  repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;,</div><div class="line">		  owner: &apos;&#123;&#123; theme.gitalk.githubID &#125;&#125;&apos;,</div><div class="line">		  admin: [&apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;], </div><div class="line">		  id: location.pathname,</div><div class="line">		  distractionFreeMode: &apos;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&apos;</div><div class="line">		&#125;)</div><div class="line"></div><div class="line">		gitalk.render(&apos;gitalk-container&apos;)           </div><div class="line">       &lt;/script&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<h4 id="在主题文件layout-third-party-comments-index-swig中引入刚刚添加的文件。"><a href="#在主题文件layout-third-party-comments-index-swig中引入刚刚添加的文件。" class="headerlink" title="在主题文件layout/_third-party/comments/index.swig中引入刚刚添加的文件。"></a>在主题文件<code>layout/_third-party/comments/index.swig</code>中引入刚刚添加的文件。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% include &apos;gitalk.swig&apos; %&#125;</div></pre></td></tr></table></figure>
<h4 id="修改主题评论代码"><a href="#修改主题评论代码" class="headerlink" title="修改主题评论代码"></a>修改主题评论代码</h4><p>在<code>layout/_partials/comments.swig</code>文件中找到最后一个if分支，应该是这两句:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% elseif theme.valine.appid and theme.valine.appkey %&#125;</div><div class="line">      &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>在最后一个if分支后加一个Gitalk的分支:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% elseif theme.gitalk.enable %&#125;</div><div class="line"> &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<h4 id="在主题配置文件中引入Gitalk"><a href="#在主题配置文件中引入Gitalk" class="headerlink" title="在主题配置文件中引入Gitalk"></a>在主题配置文件中引入Gitalk</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">gitalk:</div><div class="line">  enable: true</div><div class="line">  githubID: newdee	 </div><div class="line">  repo: BlogComments</div><div class="line">  ClientID: ******</div><div class="line">  ClientSecret: ******</div><div class="line">  adminUser: newdee</div><div class="line">  distractionFreeMode: true</div></pre></td></tr></table></figure>
<p>这里需要创建<code>OAuth Application</code>，没有的小伙伴<a href="https://github.com/settings/applications/new" target="_blank" rel="external">请戳这里</a></p>
<p>其中githubID是你的Github用户名，repo是你用来存放评论Issue的仓库，可以不是Blog的仓库。adminUser是你的用户名，主要用来初始化评论的。clientID和client_secret是你的授权客户端ID和密钥。具体获得方法是在Github的设置界面选择<code>Authorized Github Apps</code>，然后<code>Register a new application</code>，将<code>Authorization callback URL</code>设置为你的Blog的域名，然后就可以获得clientID和client_secret了。</p>
<p>基本上到这里就可以直接用了,打开页面会提示你初始化评论框。如果要设置按钮的样式，可以参照以下步骤:</p>
<h4 id="新建样式文件"><a href="#新建样式文件" class="headerlink" title="新建样式文件"></a>新建样式文件</h4><p>要设置评论框的样式，可以在<code>source/css/_common/components/third-party/</code>文件夹下，新建一个<code>gitalk.styl</code>文件，向其中加入如下内容:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.gt-header a, .gt-comments a, .gt-popup a</div><div class="line">  border-bottom: none;</div><div class="line">.gt-container .gt-popup .gt-action.is--active:before</div><div class="line">  top: 0.7em;</div></pre></td></tr></table></figure>
<p>可以根据自己的喜好添加修改样式。</p>
<h4 id="引入样式文件"><a href="#引入样式文件" class="headerlink" title="引入样式文件"></a>引入样式文件</h4><p>在主题目录下的<code>source/css/_common/components/third-party/third-party.styl</code>文件中引入:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@import &quot;gitalk&quot;;</div></pre></td></tr></table></figure>
<h4 id="Issue重复的问题"><a href="#Issue重复的问题" class="headerlink" title="Issue重复的问题"></a>Issue重复的问题</h4><p>到这里是可以用了的，但是初始化过程中发现Issue页面有两个一样的，后来发现是因为它把直接文章页面地址和点击阅读更多所跳转的带<code>#more</code>的页面当成两个页面，因此重复创建Issue了。<br>解决方案:<br>由于默认的id参数是<code>location.href</code>，可以将其改为<code>location.pathname</code>，即可解决当前状况。<br>即在<code>gitalk.swig</code>文件中的<code>admin</code>下面加一行:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">id: location.pathname,</div></pre></td></tr></table></figure>
<p>至此，大功告成。<br>不过配置完才发现，Gitalk也是需要一篇文章一篇文章的初始化的，并不能自动将所有的文章一次性初始化完成。</p>
<h4 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h4><p>由于Gitalk是使用UNPKG来给npm的CDN加速的，但是网络延迟有时候会稍高，可以选择直接下载js和css文件到本地。<br>将下载的<a href="https://unpkg.com/gitalk@1.1.4/dist/gitalk.css" target="_blank" rel="external">css</a>文件放于主题目录的<code>source/css</code>目录下，<a href="https://unpkg.com/gitalk@1.1.4/dist/gitalk.min.js" target="_blank" rel="external">js</a>放于<code>source/js/src</code>目录下。<br>将<code>layout/_third-party/comments/gitalk,swig</code>文件中的超链接两行修改一下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/gitalk.css&quot;&gt;</div><div class="line">&lt;script src=&quot;/js/src/gitalk.min.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>然后就可以正常加载了。</p>
<h1 id="搜索引擎收录"><a href="#搜索引擎收录" class="headerlink" title="搜索引擎收录"></a>搜索引擎收录</h1><p>待续</p>
]]></content>
      
        <categories>
            
            <category> hexo建博 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo4--域名配置]]></title>
      <url>/2017/10/24/hexo4--%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>如果不喜欢github提供的域名，还可以绑定自己的域名。</p>
<h1 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h1><p>当然首先你得有一个域名，移步<a href="https://wanwang.aliyun.com" target="_blank" rel="external">万网</a></p>
<h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><p>域名解析我使用的是<a href="https://www.dnspod.cn/console/dashboard" target="_blank" rel="external">DNSPOD</a>，在你的域名购买商那里把域名的DNS服务器改成你使用的域名解析的地址。  </p>
<p>接着配置DNS解析，比如我的：  </p>
<p><img src="/2017/10/24/hexo4--域名配置/1.png" alt=""></p>
<a id="more"></a>
<p>关于github的IP可以<a href="https://help.github.com/articles/troubleshooting-custom-domains/#dns-configuration-errors" target="_blank" rel="external">看这里</a>。  </p>
<p>然后在你的本地站点目录里的source目录下添加一个CNAME文件，不带后缀，以文本编辑器打开CNAME，里面添加你的域名信息（不加http前缀），比如我的：<a href="http://pigpi.cn" target="_blank" rel="external">pigpi.cn</a>。提交部署，现在使用域名应该就可以访问你的博客了。  </p>
<h2 id="关于企业邮箱的解析"><a href="#关于企业邮箱的解析" class="headerlink" title="关于企业邮箱的解析"></a>关于企业邮箱的解析</h2><p>目前遇到的情况只有一种，在集成Swiftype 站内搜索的时候，必须要企业邮箱进行注册。我使用的是腾讯企业邮箱，按照文档对域名解析进行配置即可。</p>
<p>​    </p>
]]></content>
      
        <categories>
            
            <category> hexo建博 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo3--主题的选择]]></title>
      <url>/2017/10/24/hexo3--%E4%B8%BB%E9%A2%98%E7%9A%84%E9%80%89%E6%8B%A9/</url>
      <content type="html"><![CDATA[<p>前篇已经简单的搭建了一个hexo博客，但是我希望能够有更好的视觉效果，这时候就涉及到主题的选择。</p>
<h1 id="主题网站"><a href="#主题网站" class="headerlink" title="主题网站"></a>主题网站</h1><p>给两个地址 ：</p>
<p><a href="https://hexo.io/themes/" target="_blank" rel="external"><strong>Hexo的官网主题专栏</strong></a> （总有一款适合你的）<br><a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external"><strong>知乎：有哪些好看的 Hexo 主题？</strong></a> </p>
<p>主题的质量参差不齐，尽量选择有良好的说明文档，持续更新的。主题的安装非常简单，找到地址，例如next主题：</p>
<pre><code>$ cd your-hexo-site
$ git clone https://github.com/iissnan/hexo-theme-next themes/next
</code></pre><p>打开博客根目录的 _config.yml 设为 theme: you_theme_name。这样皮肤就设置好了，可以本地启动预览一下。  </p>
<a id="more"></a>
<p>至于主题本身的设置，优化美化，支持的插件集成等等，就需要查看主题的文档了。</p>
<h1 id="论选择一款好主题的重要性"><a href="#论选择一款好主题的重要性" class="headerlink" title="论选择一款好主题的重要性"></a>论选择一款好主题的重要性</h1><p>主题的作用在我看来除了赏心悦目意外，更重要的就是维护省心、更新及时。个人博客的主旨在于分享自己，内容是第一位的，如果把有限的精力花在不断的应付主题的bug上，挺闹心。<br>例如以前用的最多的评论插件是duoshuo，去年duoshuo关停了，找替代方案网易云跟帖，又关停了。好的主题会及时提供替代方案或者开始就提供多种方案供我们选择，出现问题改下配置文件就可以。如果是差一点的，可能必须要换一款主题才行。</p>
<p>拿我使用过的两款来说：<a href="https://github.com/forsigner/fexo/" target="_blank" rel="external"><strong>fexo</strong></a>、<a href="http://theme-next.iissnan.com" target="_blank" rel="external"><strong>next</strong></a> ，点进去就能立判高下。虽然我超爱fexo的样子，但是也不得不妥协选择了人气最高的next主题。</p>
]]></content>
      
        <categories>
            
            <category> hexo建博 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo2--开始一篇博文]]></title>
      <url>/2017/10/24/hexo2--%E5%BC%80%E5%A7%8B%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/</url>
      <content type="html"><![CDATA[<h1 id="新建博文步骤"><a href="#新建博文步骤" class="headerlink" title="新建博文步骤"></a>新建博文步骤</h1><ol>
<li>新建文章，hexo new “文章名称”，文章会生成在./source/_posts文件夹中  </li>
<li>采用可视化的markdown编辑器编写文章</li>
<li>生成并且部署  hexo d -g</li>
</ol>
<a id="more"></a>
<h1 id="markdown编辑器"><a href="#markdown编辑器" class="headerlink" title="markdown编辑器"></a>markdown编辑器</h1><p>我使用过两款编辑器<a href="http://markdownpad.com/" target="_blank" rel="external">markdownpad</a> 和 <a href="https://www.typora.io/" target="_blank" rel="external">typora</a> ，目前在使用后者。</p>
<p>这两种工具我用的都挺顺的，前者是传统的左边写作右边预览的布局，上手非常容易，缺点是界面太朴实并且要付费，给个激活帐户，也是网上找的。    </p>
<blockquote>
<p>邮箱地址：Soar360@live.com  </p>
<p>密钥：  GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==  </p>
</blockquote>
<p>后者呢是直接所见即所得的方式，初上手的时候比较不适应，因为看不见markdown原文，对语法熟悉以后会比较快。</p>
<p>选好markdown编辑器后尽量始终使用一种，因为不同的编辑器对于markdown的语法识别有差别，我就吃过亏，导致所有博客格式乱了。</p>
<h1 id="头部认知"><a href="#头部认知" class="headerlink" title="头部认知"></a>头部认知</h1><p>每一篇文章都需要设定头部，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中</div><div class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</div><div class="line">categories: #文章分类目录，可以为空，注意:后面有个空格</div><div class="line">tags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格</div><div class="line">---</div></pre></td></tr></table></figure>
<p>除了上述常用属性外，还可以设定：</p>
<h2 id="description"><a href="#description" class="headerlink" title="description"></a>description</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">description: 你对本页的描述</div></pre></td></tr></table></figure>
<h2 id="photos"><a href="#photos" class="headerlink" title="photos"></a>photos</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">photos:</div><div class="line">- http://image1.jpg</div><div class="line">- http://image2.jpg</div></pre></td></tr></table></figure>
<p>本篇文章第一张图就是这么设置的。</p>
<h1 id="关于文章摘要"><a href="#关于文章摘要" class="headerlink" title="关于文章摘要"></a>关于文章摘要</h1><p>默认在首页会显示全文，这样较长的文章会导致首页下拉太长，可以如下设置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">摘要</div><div class="line">&lt;!--more--&gt;</div><div class="line">下文</div></pre></td></tr></table></figure>
<p>如此在首页就显示more上面的内容，剩下的需要点击“阅读全文”。</p>
<h1 id="关于图片"><a href="#关于图片" class="headerlink" title="关于图片"></a>关于图片</h1><p>既然是博客，免不了接触最多的就是文字和图片，关于图片有两种方式，一种是把图片放在网络上，获得地址，比如图床，一些能够生成链接的在线存储；另外一种就是使用本地图片的方式。</p>
<h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>图床推荐<a href="https://www.qiniu.com" target="_blank" rel="external">七牛</a> ，当然也有其他一些，比如：<a href="http://jiantuku.com/#/" target="_blank" rel="external">极简图床</a>、 FarBox、Dropbox、又拍云等等。</p>
<h2 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h2><p>更改博客目录下_config.yml文件，设置post_asset_folder: true，</p>
<p>安装插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-asset-image --save</div></pre></td></tr></table></figure>
<p>重新生成博客</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g</div></pre></td></tr></table></figure>
<p>这时候使用创建文章的命令，除了生成md文件外，还会生成一个同名文件夹，需要用到的图片就放在这里，在博客中直接/you_folder_name/you_image_name引用就可以了。我目前就使用这种方式，很方便。</p>
]]></content>
      
        <categories>
            
            <category> hexo建博 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[某些技术选型]]></title>
      <url>/2017/10/20/%E6%9F%90%E4%BA%9B%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B/</url>
      <content type="html"><![CDATA[<h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><h2 id="自动化测试和部署"><a href="#自动化测试和部署" class="headerlink" title="自动化测试和部署"></a>自动化测试和部署</h2><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><h2 id="数据监控"><a href="#数据监控" class="headerlink" title="数据监控"></a>数据监控</h2><p><img src="/2017/10/20/某些技术选型/pool.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 框架技术 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo1--hexo + github-pages博客的简单搭建]]></title>
      <url>/2017/01/04/hexo1--hexo%20+%20github-pages%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="关于github-pages"><a href="#关于github-pages" class="headerlink" title="关于github pages"></a>关于github pages</h1><p>Github Pages 是github提供的一种服务，可以用来搭建个人页面，GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。我们要搭建自己的博客使用的是第一种方式，这种方式每个用户名下面只能建立一个。  </p>
<p>使用github创建的博客是属于静态网站博客，都是以静态html形式展现，好处就是简单。</p>
<a id="more"></a>
<h1 id="关于hexo"><a href="#关于hexo" class="headerlink" title="关于hexo"></a>关于hexo</h1><blockquote>
<p>hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。  </p>
<h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul>
<li><p>风一般的速度  </p>
<p>Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。  </p>
</li>
<li><p>流畅的撰写  </p>
<p>支持GitHub Flavored Markdown和所有Octopress的插件。  </p>
</li>
<li><p>扩展性  </p>
<p>Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less。  </p>
</li>
</ul>
</blockquote>
<p>也有很多类似的框架，比如Jekyll、Ghost等等，我反正一点也不了解，不在我的知识范围呢，使用hexo原因也很简单，搜索出来hexo和jekyll二选一，我觉得hexo更简洁一些而已（至少名字要好记）。  </p>
<h1 id="关于markdown"><a href="#关于markdown" class="headerlink" title="关于markdown"></a>关于markdown</h1><blockquote>
<p>Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。</p>
</blockquote>
<p>虽然说是一种语言，其实学习成本很低，我在写这篇博客时也才是刚刚使用。使用hexo来写博客，需要使用markdown语言。 </p>
<p><a href="http://wowubuntu.com/markdown/#p" target="_blank" rel="external">Markdown 语法说明 (简体中文版) </a>  </p>
<h1 id="博客搭建步骤"><a href="#博客搭建步骤" class="headerlink" title="博客搭建步骤"></a>博客搭建步骤</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li>你必须有一个github账号。<a href="https://github.com/" target="_blank" rel="external">点此直达</a></li>
<li>你必须在电脑上安装了git工具，用于文章的上传。<a href="https://git-for-windows.github.io/" target="_blank" rel="external">点此下载</a></li>
<li>安装node.js，hexo是基于这个的，用于生成静态页面。<a href="https://nodejs.org/en/" target="_blank" rel="external">点此下载</a>  </li>
</ol>
<h2 id="创建Github-Pages项目"><a href="#创建Github-Pages项目" class="headerlink" title="创建Github Pages项目"></a>创建Github Pages项目</h2><p>借用别人的一张图：  </p>
<p><img src="/2017/01/04/hexo1--hexo + github-pages博客的简单搭建/1.png" alt="">  </p>
<p>然后需要配置SSH密钥，可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。这个我就不赘述了，可以参考下<a href="http://www.jianshu.com/p/15ae47eddc56" target="_blank" rel="external">这篇文章</a>的第三节。</p>
<h2 id="hexo的安装和配置"><a href="#hexo的安装和配置" class="headerlink" title="hexo的安装和配置"></a>hexo的安装和配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>找一个你喜欢的地方建个文件夹，进文件夹使用Git Bash敲命令</p>
<pre><code>npm install -g hexo-cli  
</code></pre><p>此外有很多插件可以选择：  </p>
<pre><code>npm install hexo-generator-index --save  
npm install hexo-generator-archive --save  
npm install hexo-generator-category --save  
npm install hexo-generator-tag --save  
npm install hexo-server --save  
npm install hexo-deployer-git --save  
npm install hexo-deployer-heroku --save  
npm install hexo-deployer-rsync --save  
npm install hexo-deployer-openshift --save  
npm install hexo-renderer-marked@0.2 --save  
npm install hexo-renderer-stylus@0.2 --save  
npm install hexo-generator-feed@1 --save  
npm install hexo-generator-sitemap@1 --save
</code></pre><p>反正我是不知道有什么用，直接全装上了。安装插件的时候也许会报错，试试看更新下npm的版本：   </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i npm -g</div></pre></td></tr></table></figure>
<p>然后需要做初始化：  </p>
<pre><code>hexo init
</code></pre><p>这样文件夹内就生成了博客的目录，如下：  </p>
<p><img src="/2017/01/04/hexo1--hexo + github-pages博客的简单搭建/2.png" alt="aa">  </p>
<p>deploy：执行hexo deploy命令部署到GitHub上的内容目录<br>public：执行hexo generate命令，输出的静态网页内容目录<br>scaffolds：layout模板文件目录，其中的md文件可以添加编辑<br>scripts：扩展脚本目录，这里可以自定义一些javascript脚本<br>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。<br>_drafts：草稿文章<br>_posts：发布文章<br>themes：主题文件目录<br>_config.yml：全局配置文件，大多数的设置都在这里<br>package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</p>
<p>至此hexo也就安装好了，可以试着预览下，需要通过命令：  </p>
<pre><code>hexo g   
hexo s
</code></pre><p>前者是生成静态页面，后者是启动服务，启动后通过<a href="http://localhost:4000/能够预览你的博客。" target="_blank" rel="external">http://localhost:4000/能够预览你的博客。</a>  </p>
<p><img src="/2017/01/04/hexo1--hexo + github-pages博客的简单搭建/3.png" alt="">  </p>
<h3 id="hexo的常用命令和配置"><a href="#hexo的常用命令和配置" class="headerlink" title="hexo的常用命令和配置"></a>hexo的常用命令和配置</h3><p>关于你博客的设置可以分成2部分：  </p>
<ol>
<li>全局设置：在你博客目录下有一个文件名_config.yml，打开可以配置信息。  </li>
<li>局部设置：在你博客目录下 \themes\你使用的主题_config.yml，经常修改的应该是这个文件，因为直接关乎到博客的样子  </li>
</ol>
<p>常用命令都很简单：   </p>
<pre><code>Hexo常用命令：
hexo new &quot;postName&quot;       #新建文章
hexo new page &quot;pageName&quot;  #新建页面
hexo generate             #生成静态页面至public目录
hexo server               #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）
hexo deploy               #将.deploy目录部署到GitHub  
hexo clean                #有任何问题都可以使用clean试试
</code></pre><p>当然，如果每次输入那么长命令，那么一定想到用简写：  </p>
<pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre><p>复合命令：  </p>
<pre><code>hexo d -g
hexo s -g
</code></pre><p>其他命令：  </p>
<pre><code>npm update -g hexo           #更新hexo
</code></pre><h3 id="和Github-pages项目进行关联"><a href="#和Github-pages项目进行关联" class="headerlink" title="和Github pages项目进行关联"></a>和Github pages项目进行关联</h3><p>复制你的github pages项目的地址，例如我的是：<strong><a href="https://github.com/lanshu/lanshu.github.io.git" target="_blank" rel="external">https://github.com/lanshu/lanshu.github.io.git</a></strong>。  </p>
<p>打开你的hexo文件夹的配置文件_config.yml，找到deploy节点，按照如下配置：  </p>
<p><img src="/2017/01/04/hexo1--hexo + github-pages博客的简单搭建/4.png" alt="">  </p>
<p>到此，最初始的博客就搭建完成了并能通过github pages的地址可以访问到。</p>
]]></content>
      
        <categories>
            
            <category> hexo建博 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[路开始的地方]]></title>
      <url>/2017/01/04/%E8%B7%AF%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9C%B0%E6%96%B9/</url>
      <content type="html"><![CDATA[<p>首先欢迎来到我的博客 <strong><a href="http://pigpi.cn" target="_blank" rel="external">猪皮</a></strong>。</p>
<p>本身自己是搞技术的，也尝试过写一些博客记录自己，但是总是没有坚持下来。总是说的太多，做的太少。不想给自己找原因，只想找个目标。</p>
<p>建立自己的博客，一直是想做的事情，遇到github pages于是水到渠成，简单轻便，不需要多重的环境，最多要有个域名。不关心到底有多少人看，只是想坚持下去，希望这是我写的最后一篇博客开篇。想写的东西很多：技术、生活、心情。。。看过很多东西，也对很多东西感兴趣过，可是自小对好记性不如烂笔头嗤之以鼻。其实现在是后悔的，一点一滴如果都记录下来，那么我肯定要比现在强很多。但是现在也不晚，所以少说话，多记录，文字的魅力需要时间来发酵。心里唯有两个字——<strong>坚持</strong>！</p>
<a id="more"></a>
<p>为什么博客名字叫猪皮呢？本身我姓朱，然后儿子刚刚3岁，喜欢叫自己老皮！恰好pigpi的域名也在，于是毫不犹豫的这么叫了。</p>
<p>好了，就这些了，欢迎常来！</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
