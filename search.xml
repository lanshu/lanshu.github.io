<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo7--next小问题修改]]></title>
    <url>%2F2017%2F10%2F25%2Fhexo7--next%E5%B0%8F%E9%97%AE%E9%A2%98%E4%BF%AE%E6%94%B9%2F</url>
    <content type="text"><![CDATA[blockquote 文本内容超出不自动换行next主题中，用 blockquote 标签圈出文本时，出现以下情况: 解决办法： 需要修改皮肤的样式，路径如下：/you_site_folder/themes/next/source/css_common/scaffolding/base.styl。 修改blockquote 样式下 添加 word-break: break-all; 12345blockquote &#123; margin: 0; padding: 0; word-break: break-all;&#125; 效果如下：]]></content>
      <categories>
        <category>hexo建博</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo6--next美化整理]]></title>
    <url>%2F2017%2F10%2F25%2Fhexo6--next%E7%BE%8E%E5%8C%96%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[既然选择了next主题，也不打算经常换，但是做一些美化还是可以考虑的。 在右上角或者左上角实现fork me on github效果 实现点击这里挑选自己喜欢的样式，并复制代码。 然后粘贴刚才复制的代码到themes/next/layout/_layout.swig文件中(放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;的下面)，并把href改为你的github地址。 重新clean并生成。 404页面默认的404页面是github的，如果想自定义，需要把自己的404.html页面放在皮肤的source目录下即可。建议使用腾讯公益的页面： 1234567891011&lt;!DOCTYPE HTML&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;/head&gt; &lt;body&gt; &lt;script type="text/javascript" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="your site url " homePageName="回到我的主页"&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 添加动态背景效果 线条会动啊动，飘啊飘。 实现添加js修改 themes/next/layout/_layout.swig 1234&#123;% if theme.canvas_nest %&#125;&lt;script type="text/javascript" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 将上述代码防止在&lt; /body&gt; 前就可以了(注意不要放在&lt; /head&gt;的后面)。 修改_config.yml打开皮肤目录下的_config.yml 配置文件，添加如下代码： 1234# background settings# add canvas-nest effect# see detail from https://github.com/hustcc/canvas-nest.jscanvas_nest: true 设置动态背景的某些属性可以自定义， 1234&#123;% if theme.canvas_nest %&#125;&lt;script type="text/javascript"color="0,0,255" opacity='0.7' zIndex="-2" count="99" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;&#123;% endif %&#125; color ：线条颜色, 默认: &#39;0,0,0&#39;；三个数字分别为(R,G,B) opacity: 线条透明度（0~1）, 默认: 0.5 count: 线条的总数量, 默认: 150 zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1 重新clean并生成。 网站底部字数统计&amp;文章字数统计功能效果 实现安装插件： 1$ npm install hexo-wordcount --save 修改主题配置文件 12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true totalcount: true separated_meta: true 网站的图标Favicon把图标文件favicon.ico 放在/themes/next/source/images里，并且修改主题配置文件： 12# Put your favicon.ico into `hexo-site/source/` directory.favicon: /favicon.ico 在文章底部增加版权信息效果 实现在目录 /themes/next/layout/_macro/下添加 my-copyright.swig文件： 1234567891011121314151617181920212223242526272829303132&#123;% if page.copyright %&#125;&lt;div class="my_post_copyright"&gt; &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type="text/javascript" src="http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"&gt;&lt;/script&gt; &lt;script src="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"&gt;&lt;/script&gt; &lt;link rel="stylesheet" type="text/css" href="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;"&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href="/" title="访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class="copy-path" title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;" aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard('.fa-clipboard'); clipboard.on('success', $(function()&#123; $(".fa-clipboard").click(function()&#123; swal(&#123; title: "", text: '复制成功', html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;)); &lt;/script&gt;&#123;% endif %&#125; 在目录/themes/next/source/css/_common/components/post/下添加my-post-copyright.styl文件： 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #b5b5b5; font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #a3d2a3; text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 修改/themes/next/layout/_macro/post.swig文件，在代码 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125; 之前添加增加如下代码： 12345&#123;% if not is_index %&#125; &lt;div&gt; &#123;% include 'my-copyright.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125; 修改/themes/next/source/css/_common/components/post/post.styl文件，在最后一行增加代码： 1@import &quot;my-post-copyright&quot; 保存重新生成即可。 隐藏网页底部hexo和主题信息 打开/themes/next/layout/_partials/footer.swig，注释掉下述代码：]]></content>
      <categories>
        <category>hexo建博</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo5--hexo辅助插件和第三方服务]]></title>
    <url>%2F2017%2F10%2F25%2Fhexo5--hexo%E8%BE%85%E5%8A%A9%E6%8F%92%E4%BB%B6%E5%92%8C%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[添加RSS效果图 实现方法首先安装插件： 1$ npm install --save hexo-generator-feed 打开博客根目录下的_config.yml 配置文件，末尾添加如下代码： 123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed 打开皮肤目录下的_config.yml 配置文件，修改rss的属性值： 1234# Set rss to false to disable feed link.# Leave rss as empty to use site's feed link.# Set rss to specific value if you have burned your feed already.rss: /atom.xml 重新生成博客。]]></content>
      <categories>
        <category>hexo建博</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo4--域名配置]]></title>
    <url>%2F2017%2F10%2F24%2Fhexo4--%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[如果不喜欢github提供的域名，还可以绑定自己的域名。 购买域名当然首先你得有一个域名，移步万网 域名解析域名解析我使用的是DNSPOD，在你的域名购买商那里把域名的DNS服务器改成你使用的域名解析的地址。 接着配置DNS解析，比如我的： 关于github的IP可以看这里。 然后在你的本地站点目录里的source目录下添加一个CNAME文件，不带后缀，以文本编辑器打开CNAME，里面添加你的域名信息（不加http前缀），比如我的：pigpi.cn。提交部署，现在使用域名应该就可以访问你的博客了。 关于企业邮箱的解析目前遇到的情况只有一种，在集成Swiftype 站内搜索的时候，必须要企业邮箱进行注册。我使用的是腾讯企业邮箱，按照文档对域名解析进行配置即可。 ​]]></content>
      <categories>
        <category>hexo建博</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo3--主题的选择]]></title>
    <url>%2F2017%2F10%2F24%2Fhexo3--%E4%B8%BB%E9%A2%98%E7%9A%84%E9%80%89%E6%8B%A9%2F</url>
    <content type="text"><![CDATA[前篇已经简单的搭建了一个hexo博客，但是我希望能够有更好的视觉效果，这时候就涉及到主题的选择。 主题网站给两个地址 ： Hexo的官网主题专栏 （总有一款适合你的）知乎：有哪些好看的 Hexo 主题？ 主题的质量参差不齐，尽量选择有良好的说明文档，持续更新的。主题的安装非常简单，找到地址，例如next主题： $ cd your-hexo-site $ git clone https://github.com/iissnan/hexo-theme-next themes/next 打开博客根目录的 _config.yml 设为 theme: you_theme_name。这样皮肤就设置好了，可以本地启动预览一下。 至于主题本身的设置，优化美化，支持的插件集成等等，就需要查看主题的文档了。 论选择一款好主题的重要性主题的作用在我看来除了赏心悦目意外，更重要的就是维护省心、更新及时。个人博客的主旨在于分享自己，内容是第一位的，如果把有限的精力花在不断的应付主题的bug上，挺闹心。例如以前用的最多的评论插件是duoshuo，去年duoshuo关停了，找替代方案网易云跟帖，又关停了。好的主题会及时提供替代方案或者开始就提供多种方案供我们选择，出现问题改下配置文件就可以。如果是差一点的，可能必须要换一款主题才行。 拿我使用过的两款来说：fexo、next ，点进去就能立判高下。虽然我超爱fexo的样子，但是也不得不妥协选择了人气最高的next主题。]]></content>
      <categories>
        <category>hexo建博</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo2--开始一篇博文]]></title>
    <url>%2F2017%2F10%2F24%2Fhexo2--%E5%BC%80%E5%A7%8B%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87%2F</url>
    <content type="text"><![CDATA[新建博文步骤 新建文章，hexo new “文章名称”，文章会生成在./source/_posts文件夹中 采用可视化的markdown编辑器编写文章 生成并且部署 hexo d -g markdown编辑器我使用过两款编辑器markdownpad 和 typora ，目前在使用后者。 这两种工具我用的都挺顺的，前者是传统的左边写作右边预览的布局，上手非常容易，缺点是界面太朴实并且要付费，给个激活帐户，也是网上找的。 邮箱地址：Soar360@live.com 密钥： GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ== 后者呢是直接所见即所得的方式，初上手的时候比较不适应，因为看不见markdown原文，对语法熟悉以后会比较快。 选好markdown编辑器后尽量始终使用一种，因为不同的编辑器对于markdown的语法识别有差别，我就吃过亏，导致所有博客格式乱了。 头部认知每一篇文章都需要设定头部， 123456---title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: #文章分类目录，可以为空，注意:后面有个空格tags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格--- 除了上述常用属性外，还可以设定： description1description: 你对本页的描述 photos123photos:- http://image1.jpg- http://image2.jpg 本篇文章第一张图就是这么设置的。 关于文章摘要默认在首页会显示全文，这样较长的文章会导致首页下拉太长，可以如下设置： 123摘要&lt;!--more--&gt;下文 如此在首页就显示more上面的内容，剩下的需要点击“阅读全文”。 关于图片既然是博客，免不了接触最多的就是文字和图片，关于图片有两种方式，一种是把图片放在网络上，获得地址，比如图床，一些能够生成链接的在线存储；另外一种就是使用本地图片的方式。 图床图床推荐七牛 ，当然也有其他一些，比如：极简图床、 FarBox、Dropbox、又拍云等等。 本地图片更改博客目录下_config.yml文件，设置post_asset_folder: true， 安装插件 1npm install https://github.com/CodeFalling/hexo-asset-image –save 重新生成博客 12hexo cleanhexo g 这时候使用创建文章的命令，除了生成md文件外，还会生成一个同名文件夹，需要用到的图片就放在这里，在博客中直接/you_folder_name/you_image_name引用就可以了。我目前就使用这种方式，很方便。]]></content>
      <categories>
        <category>hexo建博</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[某些技术选型]]></title>
    <url>%2F2017%2F10%2F20%2F%E6%9F%90%E4%BA%9B%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[微服务DevOps自动化测试和部署搜索数据监控]]></content>
      <categories>
        <category>技术栈</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>框架技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo1--hexo + github-pages博客的简单搭建]]></title>
    <url>%2F2017%2F01%2F04%2Fhexo1--hexo%20%2B%20github-pages%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[关于github pagesGithub Pages 是github提供的一种服务，可以用来搭建个人页面，GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。我们要搭建自己的博客使用的是第一种方式，这种方式每个用户名下面只能建立一个。 使用github创建的博客是属于静态网站博客，都是以静态html形式展现，好处就是简单。 关于hexo hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。 特性 风一般的速度 Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。 流畅的撰写 支持GitHub Flavored Markdown和所有Octopress的插件。 扩展性 Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less。 也有很多类似的框架，比如Jekyll、Ghost等等，我反正一点也不了解，不在我的知识范围呢，使用hexo原因也很简单，搜索出来hexo和jekyll二选一，我觉得hexo更简洁一些而已（至少名字要好记）。 关于markdown Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。 虽然说是一种语言，其实学习成本很低，我在写这篇博客时也才是刚刚使用。使用hexo来写博客，需要使用markdown语言。 Markdown 语法说明 (简体中文版) 博客搭建步骤准备工作 你必须有一个github账号。点此直达 你必须在电脑上安装了git工具，用于文章的上传。点此下载 安装node.js，hexo是基于这个的，用于生成静态页面。点此下载 创建Github Pages项目借用别人的一张图： 然后需要配置SSH密钥，可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。这个我就不赘述了，可以参考下这篇文章的第三节。 hexo的安装和配置安装找一个你喜欢的地方建个文件夹，进文件夹使用Git Bash敲命令 npm install -g hexo-cli 此外有很多插件可以选择： npm install hexo-generator-index --save npm install hexo-generator-archive --save npm install hexo-generator-category --save npm install hexo-generator-tag --save npm install hexo-server --save npm install hexo-deployer-git --save npm install hexo-deployer-heroku --save npm install hexo-deployer-rsync --save npm install hexo-deployer-openshift --save npm install hexo-renderer-marked@0.2 --save npm install hexo-renderer-stylus@0.2 --save npm install hexo-generator-feed@1 --save npm install hexo-generator-sitemap@1 --save 反正我是不知道有什么用，直接全装上了。安装插件的时候也许会报错，试试看更新下npm的版本： 1npm i npm -g 然后需要做初始化： hexo init 这样文件夹内就生成了博客的目录，如下： deploy：执行hexo deploy命令部署到GitHub上的内容目录public：执行hexo generate命令，输出的静态网页内容目录scaffolds：layout模板文件目录，其中的md文件可以添加编辑scripts：扩展脚本目录，这里可以自定义一些javascript脚本source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。_drafts：草稿文章_posts：发布文章themes：主题文件目录_config.yml：全局配置文件，大多数的设置都在这里package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮 至此hexo也就安装好了，可以试着预览下，需要通过命令： hexo g hexo s 前者是生成静态页面，后者是启动服务，启动后通过http://localhost:4000/能够预览你的博客。 hexo的常用命令和配置关于你博客的设置可以分成2部分： 全局设置：在你博客目录下有一个文件名_config.yml，打开可以配置信息。 局部设置：在你博客目录下 \themes\你使用的主题_config.yml，经常修改的应该是这个文件，因为直接关乎到博客的样子 常用命令都很简单： Hexo常用命令： hexo new &quot;postName&quot; #新建文章 hexo new page &quot;pageName&quot; #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） hexo deploy #将.deploy目录部署到GitHub hexo clean #有任何问题都可以使用clean试试 当然，如果每次输入那么长命令，那么一定想到用简写： hexo n == hexo new hexo g == hexo generate hexo s == hexo server hexo d == hexo deploy 复合命令： hexo d -g hexo s -g 其他命令： npm update -g hexo #更新hexo 和Github pages项目进行关联复制你的github pages项目的地址，例如我的是：https://github.com/lanshu/lanshu.github.io.git。 打开你的hexo文件夹的配置文件_config.yml，找到deploy节点，按照如下配置： 到此，最初始的博客就搭建完成了并能通过github pages的地址可以访问到。]]></content>
      <categories>
        <category>hexo建博</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路开始的地方]]></title>
    <url>%2F2017%2F01%2F04%2F%E8%B7%AF%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9C%B0%E6%96%B9%2F</url>
    <content type="text"><![CDATA[首先欢迎来到我的博客 猪皮。 本身自己是搞技术的，也尝试过写一些博客记录自己，但是总是没有坚持下来。总是说的太多，做的太少。不想给自己找原因，只想找个目标。 建立自己的博客，一直是想做的事情，遇到github pages于是水到渠成，简单轻便，不需要多重的环境，最多要有个域名。不关心到底有多少人看，只是想坚持下去，希望这是我写的最后一篇博客开篇。想写的东西很多：技术、生活、心情。。。看过很多东西，也对很多东西感兴趣过，可是自小对好记性不如烂笔头嗤之以鼻。其实现在是后悔的，一点一滴如果都记录下来，那么我肯定要比现在强很多。但是现在也不晚，所以少说话，多记录，文字的魅力需要时间来发酵。心里唯有两个字——坚持！ 为什么博客名字叫猪皮呢？本身我姓朱，然后儿子刚刚3岁，喜欢叫自己老皮！恰好pigpi的域名也在，于是毫不犹豫的这么叫了。 好了，就这些了，欢迎常来！]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
</search>
